@import "mixin";

.cover-slide {
  position: relative;
  overflow: hidden; // transform: scale(1.5)ではみ出すのでなくす
  &::after {
    content: "";
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    //全部記述すると親要素をカバーしてくれる
    background-color: #eaebe6;
    opacity: 0;
    @include animation($name: kf-cover-slide);
  }
  &.inview {
    &::after {
      opacity: 1;
      @include animation(
        $name: kf-cover-slide,
        $duration: 1.6s,
        $timing-function: ease-in-out,
        $fill-mode: normal
      );
    }
  }
}

//こちらの方がパフォーマンスがいい
@keyframes kf-cover-slide {
  //左側に押し潰し
  0% {
    transform-origin: left; //視点
    transform: scaleX(0); //大きさ
  }
  //カバー
  50% {
    transform-origin: left;
    transform: scaleX(1);
  }
  50.1% {
    transform-origin: right;
    transform: scaleX(1);
  }
  //右側に押し潰し
  100% {
    transform-origin: right;
    transform: scaleX(0);
  }
}

// @keyframes kf-cover-slide {
//   //左側に押し潰し
//   0% {
//     left: 0;
//     right: 100%;
//   }
//   //カバー
//   50% {
//     left: 0;
//     right: 0;
//   }
//   //右側に押し潰し
//   100% {
//     left: 100%;
//     right: 0;
//   }
// }

.img-zoom {
  max-width: 100%;
  opacity: 0;
  vertical-align: bottom; //display：inline-blockにつける、imgに対して上下余白がある場合に解消できる
  //&にはimg-zoomが入る
  .inview & {
    opacity: 1;
    transition: transform 0.3s ease;
    @include animation(
      $name: kf-img-show,
      $duration: 1.6s,
      $timing-function: ease-in-out,
      $fill-mode: normal
    );
    &:hover {
      transform: scale(1.3);
    }
  }
}

@keyframes kf-img-show {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  50.1% {
    opacity: 1;
    transform: scale(1.5); //scaleで大→ちょうどいい大きさ
  }
  100% {
    opacity: 1;
  }
}

.hover-darken {
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
    transition: background-color 0.3s ease;
    pointer-events: none;
    @include animation(
      $name: kf-img-show,
      $duration: 1.6s,
      $timing-function: ease-in-out,
      $fill-mode: normal
    );
  }
  &:hover::before {
    background-color: rgba(0, 0, 0, 0.4);
  }
}

.bg-img-zoom {
  background-image: url(images/image-1.jpg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  width: 100%;
  height: 500px; //background-imageだと固定値になっているのでアスペクト比が保たれないそういう場合は&::beforeに以下のように定義
  @extend .img-zoom; //.img-zoomに適用したものを流用できる
  //アスペクト比を保ちたい場合
  &::before {
    display: block;
    content: "";
    padding-top: 50%;
  }
}
